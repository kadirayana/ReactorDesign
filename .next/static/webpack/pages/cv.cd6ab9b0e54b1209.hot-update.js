"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/cv",{

/***/ "(pages-dir-browser)/./components/CVDownloadButton.js":
/*!****************************************!*\
  !*** ./components/CVDownloadButton.js ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CVDownloadButton)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_i18next__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-i18next */ \"(pages-dir-browser)/./node_modules/next-i18next/dist/esm/index.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dynamic */ \"(pages-dir-browser)/./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_3__);\n\nvar _s = $RefreshSig$();\n\n\n\n// Dynamically import html2pdf to avoid SSR issues\nconst html2pdf = next_dynamic__WEBPACK_IMPORTED_MODULE_3___default()(()=>__webpack_require__.e(/*! import() */ \"_pages-dir-browser_node_modules_html2pdf_js_dist_html2pdf_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! html2pdf.js */ \"(pages-dir-browser)/./node_modules/html2pdf.js/dist/html2pdf.js\", 23)), {\n    loadableGenerated: {\n        modules: [\n            \"components\\\\CVDownloadButton.js -> \" + \"html2pdf.js\"\n        ]\n    },\n    ssr: false\n});\nfunction CVDownloadButton() {\n    _s();\n    const { t } = (0,next_i18next__WEBPACK_IMPORTED_MODULE_2__.useTranslation)('common');\n    const [isDownloading, setIsDownloading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handleDownloadPDF = async ()=>{\n        try {\n            setIsDownloading(true);\n            // Dynamically import the library\n            const html2pdf = (await __webpack_require__.e(/*! import() */ \"_pages-dir-browser_node_modules_html2pdf_js_dist_html2pdf_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! html2pdf.js */ \"(pages-dir-browser)/./node_modules/html2pdf.js/dist/html2pdf.js\", 23))).default;\n            const element = document.querySelector('.cv-page');\n            if (!element) {\n                alert(t('cvDownload.error'));\n                setIsDownloading(false);\n                return;\n            }\n            // Hide download buttons temporarily\n            const downloadBtns = element.querySelectorAll('.cv-download-btn');\n            downloadBtns.forEach((b)=>b.style.display = 'none');\n            try {\n                const opt = {\n                    margin: 5,\n                    filename: t('cvDownload.title') + '.pdf',\n                    image: {\n                        type: 'jpeg',\n                        quality: 0.98\n                    },\n                    html2canvas: {\n                        scale: 2,\n                        useCORS: true\n                    },\n                    jsPDF: {\n                        orientation: 'portrait',\n                        unit: 'mm',\n                        format: 'a4',\n                        compress: true\n                    },\n                    pagebreak: {\n                        mode: [\n                            'avoid-all',\n                            'css',\n                            'legacy'\n                        ]\n                    }\n                };\n                await html2pdf().set(opt).from(element).save();\n            } finally{\n                // Show download buttons again\n                downloadBtns.forEach((b)=>b.style.display = 'inline-block');\n                setIsDownloading(false);\n            }\n        } catch (error) {\n            console.error('Error generating PDF:', error);\n            alert(t('cvDownload.error'));\n            setIsDownloading(false);\n        }\n    };\n    const handleDownloadWord = async ()=>{\n        try {\n            setIsDownloading(true);\n            const element = document.querySelector('.cv-page');\n            if (!element) {\n                alert(t('cvDownload.error'));\n                setIsDownloading(false);\n                return;\n            }\n            // Hide buttons while generating\n            const downloadBtns = element.querySelectorAll('.cv-download-btn');\n            downloadBtns.forEach((b)=>b.style.display = 'none');\n            // Collect critical CSS from the page and inline it\n            const gatherStyles = ()=>{\n                let css = '';\n                for (const sheet of Array.from(document.styleSheets)){\n                    try {\n                        if (!sheet.cssRules) continue;\n                        for (const rule of Array.from(sheet.cssRules)){\n                            css += rule.cssText + '\\n';\n                        }\n                    } catch (e) {\n                    // Ignore cross-origin stylesheets\n                    }\n                }\n                return css;\n            };\n            const criticalCSS = gatherStyles();\n            const html = '<!doctype html><html><head><meta charset=\"utf-8\"><title>'.concat(t('cvDownload.title'), \"</title><style>\").concat(criticalCSS, \"</style></head><body>\").concat(element.innerHTML, \"</body></html>\");\n            // POST the HTML to server-side API\n            try {\n                const response = await fetch('/api/generate-docx', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        html\n                    })\n                });\n                if (!response.ok) {\n                    const text = await response.text();\n                    throw new Error('Server error: ' + text);\n                }\n                const blob = await response.blob();\n                const url = URL.createObjectURL(blob);\n                const a = document.createElement('a');\n                a.href = url;\n                a.download = t('cvDownload.title') + '.docx';\n                document.body.appendChild(a);\n                a.click();\n                a.remove();\n                URL.revokeObjectURL(url);\n            } catch (serverErr) {\n                console.error('Server-side docx generation failed:', serverErr);\n                alert(t('cvDownload.error'));\n            }\n            // Restore buttons\n            downloadBtns.forEach((b)=>b.style.display = 'inline-block');\n        } catch (err) {\n            console.error('Error generating Word:', err);\n            alert(t('cvDownload.error'));\n        } finally{\n            setIsDownloading(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            display: 'flex',\n            gap: '12px',\n            marginBottom: '24px',\n            flexWrap: 'wrap'\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: handleDownloadPDF,\n                disabled: isDownloading,\n                className: \"cv-download-btn\",\n                style: {\n                    backgroundColor: isDownloading ? '#999' : '#00539C',\n                    color: 'white',\n                    padding: '12px 24px',\n                    border: 'none',\n                    borderRadius: '6px',\n                    cursor: isDownloading ? 'not-allowed' : 'pointer',\n                    fontSize: '16px',\n                    fontWeight: '600',\n                    transition: 'all 0.3s ease',\n                    opacity: isDownloading ? 0.7 : 1\n                },\n                onMouseOver: (e)=>{\n                    if (!isDownloading) {\n                        e.target.style.backgroundColor = '#003458';\n                        e.target.style.transform = 'translateY(-2px)';\n                        e.target.style.boxShadow = '0 4px 12px rgba(0, 83, 156, 0.15)';\n                    }\n                },\n                onMouseOut: (e)=>{\n                    if (!isDownloading) {\n                        e.target.style.backgroundColor = '#00539C';\n                        e.target.style.transform = 'translateY(0)';\n                        e.target.style.boxShadow = 'none';\n                    }\n                },\n                children: [\n                    \"\\uD83D\\uDCE5 \",\n                    isDownloading ? t('cvDownload.button') + '...' : t('cvDownload.button')\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\Kadir\\\\Desktop\\\\ReactorDesign\\\\components\\\\CVDownloadButton.js\",\n                lineNumber: 128,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: handleDownloadWord,\n                disabled: isDownloading,\n                className: \"cv-download-btn\",\n                style: {\n                    backgroundColor: isDownloading ? '#999' : '#28a745',\n                    color: 'white',\n                    padding: '12px 24px',\n                    border: 'none',\n                    borderRadius: '6px',\n                    cursor: isDownloading ? 'not-allowed' : 'pointer',\n                    fontSize: '16px',\n                    fontWeight: '600',\n                    transition: 'all 0.3s ease',\n                    opacity: isDownloading ? 0.7 : 1\n                },\n                onMouseOver: (e)=>{\n                    if (!isDownloading) {\n                        e.target.style.backgroundColor = '#218838';\n                        e.target.style.transform = 'translateY(-2px)';\n                        e.target.style.boxShadow = '0 4px 12px rgba(40, 167, 69, 0.15)';\n                    }\n                },\n                onMouseOut: (e)=>{\n                    if (!isDownloading) {\n                        e.target.style.backgroundColor = '#28a745';\n                        e.target.style.transform = 'translateY(0)';\n                        e.target.style.boxShadow = 'none';\n                    }\n                },\n                children: [\n                    \"\\uD83D\\uDCDD \",\n                    t('cvDownload.word')\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\Kadir\\\\Desktop\\\\ReactorDesign\\\\components\\\\CVDownloadButton.js\",\n                lineNumber: 162,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Kadir\\\\Desktop\\\\ReactorDesign\\\\components\\\\CVDownloadButton.js\",\n        lineNumber: 127,\n        columnNumber: 5\n    }, this);\n}\n_s(CVDownloadButton, \"9/DLMdBvrSoUZg4HvIBybKXBiF4=\", false, function() {\n    return [\n        next_i18next__WEBPACK_IMPORTED_MODULE_2__.useTranslation\n    ];\n});\n_c = CVDownloadButton;\nvar _c;\n$RefreshReg$(_c, \"CVDownloadButton\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/CVDownloadButton.js\n"));

/***/ })

});